CREATE TABLE public."Biometry" (
    uuid uuid NOT NULL,
    author uuid NOT NULL,
    weight integer,
    height integer,
    created_at timestamp with time zone NOT NULL,
    changed_at timestamp with time zone,
    deleted_at timestamp with time zone
);

CREATE TABLE public."DiaryEntrys" (
    uuid uuid NOT NULL,
    author uuid NOT NULL,
    type text NOT NULL,
    heart_rate integer,
    blood_saturation integer,
    blood_preassure text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone NOT NULL
);

CREATE TABLE public."ExportData" (
    uuid uuid NOT NULL,
    author uuid NOT NULL,
    exported_data text NOT NULL,
    created_at timestamp with time zone NOT NULL
);

CREATE TABLE public."IntakeItems" (
    uuid uuid NOT NULL,
    name text NOT NULL,
    calory_amount integer,
    tags text,
    state text NOT NULL,
    weight integer,
    diary_entry uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone NOT NULL
);

CREATE TABLE public."Users" (
    uuid uuid NOT NULL,
    name text,
    alias text,
    chat_id bigint NOT NULL,
    age integer,
    sex text,
    observers uuid,
    observees uuid,
    subscription_end timestamp with time zone,
    subscription_start timestamp with time zone,
    created_at time with time zone NOT NULL,
    updated_at time with time zone,
    deleted_at time with time zone,
    state text NOT NULL
);

ALTER TABLE ONLY public."Biometry"
    ADD CONSTRAINT "Biometry_pkey" PRIMARY KEY (uuid);

ALTER TABLE ONLY public."DiaryEntrys"
    ADD CONSTRAINT "DiaryEntrys_pkey" PRIMARY KEY (uuid);

ALTER TABLE ONLY public."ExportData"
    ADD CONSTRAINT "ExportData_pkey" PRIMARY KEY (uuid);

ALTER TABLE ONLY public."IntakeItems"
    ADD CONSTRAINT "IntakeItems_pkey" PRIMARY KEY (uuid);

ALTER TABLE public."IntakeItems"
    ADD CONSTRAINT "State" CHECK ((state = ANY (ARRAY['solid'::text, 'liquid'::text]))) NOT VALID;

ALTER TABLE public."DiaryEntrys"
    ADD CONSTRAINT "Type" CHECK ((type = ANY (ARRAY['intake_item'::text, 'heart_rate'::text, 'blood_saturation'::text, 'blood_preassure'::text]))) NOT VALID;

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT "Users_pkey" PRIMARY KEY (uuid);

CREATE INDEX fki_observees ON public."Users" USING btree (observees);

CREATE INDEX fki_observers ON public."Users" USING btree (observers);

ALTER TABLE ONLY public."DiaryEntrys"
    ADD CONSTRAINT "Author" FOREIGN KEY (author) REFERENCES public."Users"(uuid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY public."IntakeItems"
    ADD CONSTRAINT "DiaryEntry" FOREIGN KEY (diary_entry) REFERENCES public."DiaryEntrys"(uuid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY public."ExportData"
    ADD CONSTRAINT author FOREIGN KEY (author) REFERENCES public."Users"(uuid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY public."Biometry"
    ADD CONSTRAINT author FOREIGN KEY (author) REFERENCES public."Users"(uuid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT observees FOREIGN KEY (observees) REFERENCES public."Users"(uuid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT observers FOREIGN KEY (observers) REFERENCES public."Users"(uuid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;
